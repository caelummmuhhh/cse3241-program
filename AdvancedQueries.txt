-- j. Provide a list of member names, along with the total combined amount of all items they have rented out. 
SELECT M.MemberID, M.FName, M.LName, COALESCE(COUNT(R.RentalID), 0) AS RentalCount -- in the case that member has no rentals, count = 0
FROM MEMBERS M
LEFT JOIN RENTALS R ON R.MemberID = M.MemberID
GROUP BY M.MemberID, M.FName, M.LName;


-- k. Provide a list of member names and email addresses for members who have rented more equipment than the average member. 
SELECT MEMBERS.FName, MEMBERS.LName, MEMBERS.Email
FROM MEMBERS
LEFT JOIN RENTALS ON MEMBERS.MemberID = RENTALS.MemberID
GROUP BY MEMBERS.MemberID
HAVING COUNT(*) > (
    SELECT AVG(NumRented) AvgRents
    FROM (
        SELECT COUNT(*)NumRented
        FROM RENTALS
        GROUP BY RENTALS.MemberID
    ) AS RENTAL_COUNT
);



-- l. Provide a list of the equipment in the database and associated total copies rented to members,
--    sorted from the equipment that has been rented the most to the equipment that has been rented the least.
SELECT INVENTORY.Name, COALESCE(COUNT(R.RENTALID), 0) AS RentalCount
FROM INVENTORY
LEFT JOIN RENTALS R ON INVENTORY.ItemID = R.ItemID
GROUP BY INVENTORY.Name
ORDER BY RentalCount DESC;

-- m. Provide a list of the drones in the database and the total number of miles flown, sorted from the ones that have been delivered the highest number of items to the ones delivered the lowest.
SELECT DRONES.DroneID, DRONES.Model, SUM(SHIPMENTS.Distance) AS TotalMiles, COUNT(SHIPMENTS.DeliveryID) AS DeliveriesCount
FROM DRONES
LEFT JOIN SHIPMENTS ON DRONES.DroneID = SHIPMENTS.DroneID
GROUP BY DRONES.DroneID, DRONES.Model
ORDER BY DeliveriesCount DESC;

-- n. Find the most used items in the database, use the running rented time of the item to calculate and provide also the number of times the item has been rented out. The output should be ordered from the highest running rented time to the lowest.
SELECT inv.ItemID, inv.Name, COUNT(r.RentalID)AS TimesRented, SUM(DATEDIFF(r.EndDt, r.StartDt)) AS TotalRentedTime
FROM RENTALS r
JOIN INVENTORY inv ON r.ItemID = inv.ItemID
GROUP BY inv.ItemID, i.Name
ORDER BY TotalRentedTime Desc;

--p. Provide the names and phones of members who have rented out anything by the most demanded
equipment in the database.
SELECT MEMBERS.FName, MEMBERS.LName, MEMBERS.PhoneNumber, INVENTORY.Name AS ItemName
FROM MEMBERS
JOIN RENTALS ON MEMBERS.MemberID = RENTALS.MemberID
JOIN INVENTORY ON RENTALS.ItemID = INVENTORY.ItemID
WHERE INVENTORY.Name = (
SELECT Name
FROM INVENTORY
JOIN RENTALS ON INVENTORY.ItemID = RENTALS.ItemID
GROUP BY INVENTORY.Name
ORDER BY COUNT(*) DESC
LIMIT 1
);


-- q. Provide a list of manufacturers who provided the items rented out by members who have rented more items than the average customer.
SELECT MANUFACTURER.Name
FROM MANUFACTURER
JOIN INVENTORY ON MANUFACTURER.ManufacturerID = INVENTORY.ManufacturerID
JOIN RENTALS ON INVENTORY.ItemID = RENTALS.ItemID
JOIN MEMBERS ON RENTALS.MemberID = MEMBERS.MemberID
WHERE (
    SELECT COUNT(*)
    FROM RENTALS
    WHERE RENTALS.MemberID = MEMBERS.MemberID
) > (
    SELECT AVG(RentalCount)
    FROM (
    SELECT COUNT(*) AS RentalCount
    FROM RENTALS
    GROUP BY MemberID
    ) AS AvgRentals
);

